<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic SYSTEM "https://helpserver.labs.jb.gg/help/schemas/mvp/html-entities.dtd">

<topic xsi:noNamespaceSchemaLocation="https://helpserver.labs.jb.gg/help/schemas/mvp/topic.v2.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       title="Adding Ktor dependencies"
       id="server-dependencies" help-id="Gradle">

    <link-summary>Learn how to add Ktor dependencies to the existing Gradle/Maven project.</link-summary>

    <p>
        In this topic, we'll show you how to add dependencies required for Ktor to the existing Gradle/Maven project.
    </p>

    <chapter title="Configure the repositories" id="repositories">
        <p>
            Before adding Ktor dependencies, you need to configure the repositories for this project:
        </p>
        <list>
            <li>
                <p>
                    <control>Production</control>
                </p>
                <p>
                    Production releases of Ktor are available in the Maven central repository.
                    You can declare this repository in your build script as follows:
                </p>
                <tabs group="languages">
                    <tab title="Gradle (Kotlin)" group-key="kotlin">
                        <code-block lang="Kotlin" interpolate-variables="true">
                            repositories {
                                mavenCentral()
                            }
                        </code-block>
                    </tab>
                    <tab title="Gradle (Groovy)" group-key="groovy">
                        <code-block lang="Groovy" interpolate-variables="true">
                            repositories {
                                mavenCentral()
                            }
                        </code-block>
                    </tab>
                    <tab title="Maven" group-key="maven">
                        <note>
                            <p>
                                You don't need to add the Maven central repository in the <path>pom.xml</path> file since your project inherits the central repository from
                                <a href="https://maven.apache.org/guides/introduction/introduction-to-the-pom.html#super-pom">Super POM</a>.
                            </p>
                        </note>
                    </tab>
                </tabs>
            </li>
            <li>
                <p>
                    <control>Early Access Program (EAP)</control>
                </p>
                <p>
                    To get access to the <a href="https://ktor.io/eap/">EAP</a> versions of Ktor, you need to reference the <a href="https://maven.pkg.jetbrains.space/public/p/ktor/eap/io/ktor/">Space repository</a>:
                </p>
                <tabs group="languages">
                    <tab title="Gradle (Kotlin)" group-key="kotlin">
                        <code-block lang="Kotlin">
                            repositories {
                                maven {
                                    url = uri("https://maven.pkg.jetbrains.space/public/p/ktor/eap")
                                }
                            }
                        </code-block>
                    </tab>
                    <tab title="Gradle (Groovy)" group-key="groovy">
                        <code-block lang="Groovy">
                            repositories {
                                maven {
                                    url "https://maven.pkg.jetbrains.space/public/p/ktor/eap"
                                }
                            }
                        </code-block>
                    </tab>
                    <tab title="Maven" group-key="maven">
                        <code-block lang="XML">
                            <![CDATA[
                            <repositories>
                                <repository>
                                    <id>ktor-eap</id>
                                    <url>https://maven.pkg.jetbrains.space/public/p/ktor/eap</url>
                                </repository>
                            </repositories>
                            ]]>
                        </code-block>
                    </tab>
                </tabs>
            </li>
        </list>
    </chapter>



    <chapter title="Add Ktor dependencies" id="add-ktor-dependencies">
        <p>
            Every Ktor application requires at least the following dependencies:
        </p>
        <list>
            <li>
                <p>
                    <code>ktor-server-core</code>: contains core Ktor functionality.
                </p>
            </li>
            <li>
                <p>
                    A dependency for an <a href="Engines.md">engine</a> (for example, <code>ktor-server-netty</code>).
                </p>
            </li>
            <li>
                <p>
                    Logback artifacts for <a href="logging.md">logging</a>.
                </p>
            </li>
        </list>
        <p>
            The <code>dependencies</code> block for a basic Ktor application might look as follows:
        </p>
        <tabs group="languages">
            <tab title="Gradle (Kotlin)" group-key="kotlin">
                <code-block lang="Kotlin" interpolate-variables="true">
                    dependencies {
                        implementation("io.ktor:ktor-server-core:%ktor_version%")
                        implementation("io.ktor:ktor-server-netty:%ktor_version%")
                        implementation("ch.qos.logback:logback-classic:%logback_version%")
                    }
                </code-block>
            </tab>
            <tab title="Gradle (Groovy)" group-key="groovy">
                <code-block lang="Groovy" interpolate-variables="true">
                    dependencies {
                        implementation "io.ktor:ktor-server-core:%ktor_version%"
                        implementation "io.ktor:ktor-server-netty:%ktor_version%"
                        implementation "ch.qos.logback:logback-classic:%logback_version%"
                    }
                </code-block>
            </tab>
            <tab title="Maven" group-key="maven">
            <code-block lang="XML" interpolate-variables="true">
                <![CDATA[
    <dependencies>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-server-core</artifactId>
            <version>%ktor_version%</version>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-server-netty</artifactId>
            <version>%ktor_version%</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>%logback_version%"</version>
        </dependency>
    </dependencies>
                ]]>
                </code-block>
            </tab>
        </tabs>
        <p>
            Note that other engines and <a href="Plugins.md">plugins</a> that extend Ktor functionality might require additional dependencies.
            You can learn more from corresponding topics.
        </p>
    </chapter>


    <chapter title="Create an entry point for running an application" id="create-entry-point">
        <p>
            <a href="running.md">Running</a> a Ktor server using Gradle/Maven depends on the way used to <a href="create_server.topic">create a server</a>.
            You can specify the application main class in one of the following ways:
        </p>
        <list>
            <li>
                <p>
                    If you use <a href="create_server.topic" anchor="embedded-server">embeddedServer</a>, specify the main class as follows:
                </p>
                <tabs group="languages">
                    <tab title="Gradle (Kotlin)" group-key="kotlin">
                        <code-block lang="Kotlin">
                            application {
                                mainClass.set("com.example.ApplicationKt")
                            }
                        </code-block>
                    </tab>
                    <tab title="Gradle (Groovy)" group-key="groovy">
                        <code-block lang="Groovy">
                            application {
                                mainClass = "com.example.ApplicationKt"
                            }
                        </code-block>
                    </tab>
                    <tab title="Maven" group-key="maven">
                        <code-block lang="XML" interpolate-variables="true">
                <![CDATA[
                            <properties>
                                <main.class>com.example.ApplicationKt</main.class>
                            </properties>
                            ]]>
                        </code-block>
                    </tab>
                </tabs>
            </li>
            <li>
                <p>
                    If you use <a href="create_server.topic" anchor="engine-main">EngineMain</a>, you need to configure it as the main class.
                    For Netty, it will look as follows:
                </p>
                <tabs group="languages">
                    <tab title="Gradle (Kotlin)" group-key="kotlin">
                        <code-block lang="Kotlin">
                            application {
                                mainClass.set("io.ktor.server.netty.EngineMain")
                            }
                        </code-block>
                    </tab>
                    <tab title="Gradle (Groovy)" group-key="groovy">
                        <code-block lang="Groovy">
                            application {
                                mainClass = "io.ktor.server.netty.EngineMain"
                            }
                        </code-block>
                    </tab>
                    <tab title="Maven" group-key="maven">
                        <code-block lang="XML" interpolate-variables="true">
                <![CDATA[
                            <properties>
                                <main.class>io.ktor.server.netty.EngineMain</main.class>
                            </properties>
                            ]]>
                        </code-block>
                    </tab>
                </tabs>
            </li>
        </list>
        <note>
            <p>
                If you are going to package your application as a Fat JAR, you also need to take into account the way used to create a server when configuring corresponding plugins.
                Learn more from the following topics:
            </p>
            <list>
                <li>
                    <p>
                        <a href="fatjar.md"/>
                    </p>
                </li>
                <li>
                    <p>
                        <a href="maven-assembly-plugin.md"/>
                    </p>
                </li>
            </list>
        </note>
    </chapter>
</topic>
